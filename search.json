[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "",
    "text": "This tutorial aims to be a practical guide for people developing educational resources in  or Python  and wishing to disseminate them easily through the SSPCloud.\nTo make this possible, a few technical prerequisites are needed - these are outlined in Important 1.\nThe aim of this tutorial is to get you started quickly on building educational resources with a state-of-the-art level of reproducibility. The next sections explain how to develop educational resources, and how to disseminate them on the SPPCloud. Keep in mind that this tutorial is intended for people developing resources, not for the users of these resources."
  },
  {
    "objectID": "index.html#which-interactive-environment-should-you-use",
    "href": "index.html#which-interactive-environment-should-you-use",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Which interactive environment should you use ?",
    "text": "Which interactive environment should you use ?\n\nPython \n\n\nJupyter notebooks1 offer an interactive interface that allows you to write Python code, test it, and see the result below the instruction rather than in a separate console. Jupyter notebooks are essential in the fields of data science and education and research because they greatly simplify exploration and experimentation.\nThey allow you to combine text in Markdown format (a lighter markup text format than HTML or \\(\\LaTeX\\)), Python code, and HTML code for visualizations and animations in a single document.\nInitially, Jupyter  was the only software offering these interactive features. Now, there are other ways to benefit from notebook advantages while having an IDE with more comprehensive features than Jupyter. For this reason, as of 2024, it is more practical to use VSCode , a general-purpose code editor but offering excellent features in Python, than Jupyter. For more information on using notebooks in VSCode, refer to the official documentation.\n\n\n\nExample with Jupyter \n\n\n\n\n\nExample with VSCode \n\n\n\n\nIn , notebooks are not commonly used - even though they offer several features that are particularly valuable for educational purposes.\nWhen designing -based training materials, two main options are available, each with its own pros and cons:\n\nProviding access to an HTML website\n\nAdvantages: Solutions can be hidden, interactive widgets can be used to offer hints or guide learners step by step, and the layout is optimized for reading.\nDrawbacks: This is not an interactive environment—learners must open a separate RStudio session to try out the code, which can disrupt the flow of learning.\n\nProviding access to a Quarto Markdown (.qmd) file\n\nAdvantages: Fully interactive—learners can run code directly within the environment, benefiting from live feedback and hands-on practice.\nDrawbacks: All answers and code are visible by default, which may reduce engagement and exploratory effort from the learners.\n\n\nSince the first option can become cumbersome - especially when learners need to copy and paste large blocks of code - it is generally recommended to use the second option in most cases. Providing direct access to a Quarto Markdown file helps minimize the risk of hard-to-reproduce errors that often arise when trainees switch between an HTML tutorial and their R session.\n\n\n\nExemple with RStudio\n\n\n\n\n\n\n\n\nWhy learnr Is Not Recommended\n\n\n\nWhile learnr allows for the creation of interactive and advanced elements such as quizzes—making it well-suited for beginner tutorials—it has some important limitations.\nFirst, it requires deployment on a Shiny server, which can be costly and complex to maintain. Additionally, in learnr, code cells do not share a global environment. This means variables and objects created in one chunk are not accessible in others, making it difficult to manage state or build on previous steps.\nThese restrictions limit the usefulness of learnr for more complex tutorials, where maintaining continuity and evolving context across the tutorial is essential."
  },
  {
    "objectID": "index.html#introducing-quarto-to-create-training-resources",
    "href": "index.html#introducing-quarto-to-create-training-resources",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Introducing Quarto  to create training resources",
    "text": "Introducing Quarto  to create training resources\nQuarto is an open source program for creating Python  and  reproducible tutorials. It makes it possible to mix seamlessly code and text in the same document and can handle many output formats, including html, pdf or notebook (.ipynb extension). Quarto is strongly recommended for the development of educational resources.\n\nThis tutorial assumes that educational resources and training material will be made available in two forms:\n\nQuarto websites, mixing text and code chunks;\nInteractive environment (see ☝️)"
  },
  {
    "objectID": "index.html#step-1-create-a-github-repository-from-a-template",
    "href": "index.html#step-1-create-a-github-repository-from-a-template",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 1: create a Github  repository from a template",
    "text": "Step 1: create a Github  repository from a template\nThe very first step towards developing educational resources consists in creating a Github repository that will contain them all. We recommend that you use templates developed specifically for the AIML4OS project\n\n\n\n\n\n\nIf you are not AIML4OS member and follow this guide\n\n\n\n\n\nYou can still use the template - just remove the style components that use AIML4OS aesthetic.\n\n\n\nDepending on the language you want to use, there are different templates:\n\n: template\n Python: template.\n\nHere is a simple procedure to re-use a template:\n\nGo to the Github  page of the chosen template;\nClick on the “Use this template” button and then on “Create a new repository” (see screenshot);\n\n\n\n\n\n\n\nChoose carefully the owner and the name of the new repository:\n\nOwner: by default the owner is the creator of the fork, but it may be preferable to choose a Github organization (for instance the AIML4OS organization);\nName: give the repository a meaningful name, for instance “Intro_To_Deep_Learning” or “Intro_To_Linear_Regression”."
  },
  {
    "objectID": "index.html#step-2-get-started-with-quarto-on-the-sspcloud",
    "href": "index.html#step-2-get-started-with-quarto-on-the-sspcloud",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 2: get started with Quarto  on the SSPCloud",
    "text": "Step 2: get started with Quarto  on the SSPCloud\nSSPCloud is not only useful to disseminate educational resources; it is also the right place to develop them. This will facilitate resource dissemination as the environment used for training will be equivalent to the one used for development. In other words, we strongly recommend that you develop on the SSPCloud because this will help a lot to make your educational resources reproducible.\nHere is a simple procedure to start developing resources on the SSP-Cloud. The procedure is different and slightly longer if this is the first time you develop resources on this particular project (because you need to define a configuration).\n\nPython \n\n\n\nFirst timeNot the first time\n\n\n\nGo the “My Services” Tab and click on “New Service”;\nChoose Rstudio and click Launch;\nCustomize the configuration by changing three settings: - In the “Friendly Name” field, choose a meaningful name (for instance dev_Intro_To_Linear_Regression);\n- In the “Repository” field of the “Git” tab, paste the URL of the repository you created in step 1 (for instance: https://www.github.com/AIML4OS/Intro_To_Linear_Regression); - In the “Network Access” tab, enable access to your service through port 5000.\nClick on Save configuration;\nClick on Launch;\nOpen the Rstudio service;\nRename the Rproj file with a meaningful name (for instance Intro_To_Linear_Regression.Rproj);\nClick on the Rproj file to open the RStudio project;\nYou’re all set!\n\n\n\n\nGo the “My Services” Tab;\nOn the right side of the screen, find the configuration of your project and click on Launch;\nOpen the Rstudio service;\nClick on the Rproj file to open the RStudio project;\nYou’re all set!\n\n\n\n\n\n\n\nFirst timeNot the first time\n\n\n\nGo the “My Services” Tab and click on “New Service”;\nChoose Vscode-r-python-julia and click Launch. We recommend using Vscode because developing Quarto resources is easier with VSCode than with Jupyter. However, final users will be able to open your educational resources with Jupyter;\nCustomize the configuration by changing three settings: - In the “Friendly Name” field, choose a meaningful name (for instance dev_Intro_To_Linear_Regression);\n- In the “Repository” field of the “Git” tab, paste the URL of the repository you created in step 1 (for instance: https://www.github.com/AIML4OS/Intro_To_Linear_Regression); - In the “Network Access” tab, enable access to your service through port 5000.\nClick on Save configuration;\nClick on Launch;\nOpen the Vscode service;\nYou’re all set!\n\n\n\n\nGo the “My Services” Tab;\nOn the right side of the screen, find the configuration of your project and click on Launch;\nYou’re all set!"
  },
  {
    "objectID": "index.html#step-3-develop-resources",
    "href": "index.html#step-3-develop-resources",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 3: develop resources",
    "text": "Step 3: develop resources\n\nDeveloping a website\nYou can develop you website by writing text and code chunks in the existing qmd files (index.qmd and chapter1.qmd). You can also extend the structure of the website by adding new Quarto documents (in the chapters subdirectory). These new documents must then be added to the website by modifying the _quarto.yml file in two places: in the render argument, and in the contents of the sidebar argument.\nIf your resources include a website, it is convenient to have a look at what this website looks like while developing it. You can preview your website from command line by executing:\nquarto preview --port 5000 --host 0.0.0.0\nThen go to https://datalab.sspcloud.fr/my-services, open the README of the service you are using and click on the link to the external port.\n\n\n\n\n\n\n\n\n\n\nFigure 1: \n\n\n\n\n\nDeveloping interactive scripts\nA compléter sur Quarto/R et Notebooks Python.\n\nR\nA compléter sur Quarto/R\n\n\nPython\nA compléter sur Notebooks Python.\nIt makes more sense to provide your trainees with a jupyter notebook. To generate it, you can write\nquarto render --to ipynb\nNotebooks will be written in the _site folder\n\n\n\nWhat you should do at all times\nIt is essential that you commit and push your changes on a regular basis (every 30 minutes or so), because your service (Rstudio or VScode) is not persistent, meaning that any changes that were pushed before closing the service are permanently lost.\nGérer les dépendances: à compléter par Lino"
  },
  {
    "objectID": "index.html#step-4-set-up-a-github-pages-website",
    "href": "index.html#step-4-set-up-a-github-pages-website",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 4: set up a Github pages website",
    "text": "Step 4: set up a Github pages website\nThis step is optional, depending on whether your resources include a website. If your resources consist only in Jupyter notebooks, R scripts or Quarto documents with R chunks, you can skip this step.\n\nCreate the gh-pages branch\nWhen developing resources, you will most likely use the main branch. However, for Github Actions to work, you need an additional branch gh-pages used by Github to deploy websites. This one will be rewritten automatically by Github after every Github Actions pipeline. However, you need to create it first. This should be done only once. Quarto documentation gives this command to create that branch. Be careful with that command, do not use before having done a first push on Github.\ngit checkout --orphan gh-pages\ngit reset --hard # make sure all changes are committed before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\n\n\nDefine a Github Actions workflow\nYou need to define a GHA workflow to automate output construction and deployment. A GHA workflow is just a list of instructions (for instance: install R, install packages…) that are executed automatically every time (for instance every time you push on the master branch). A GHA workflow is done using specific yaml scripts, located in the .github/workflows directory of your repository. The templates already contains standard workflows that you can use as a starting point.\nYou can monitor Github Actions jobs in the “Actions” tab of the Github repository of your project. Do not be afraid if your jobs fail at first; getting Github Actions to work typically requires some debugging."
  },
  {
    "objectID": "index.html#step-5-make-your-resources-available-on-an-online-website",
    "href": "index.html#step-5-make-your-resources-available-on-an-online-website",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 5: make your resources available on an online website",
    "text": "Step 5: make your resources available on an online website"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nJupyter originated from the IPython project, an interactive environment for Python developed by Fernando Pérez in 2001. In 2014, the project evolved to support other programming languages in addition to Python, leading to the creation of the Jupyter project. The name “Jupyter” is an acronym referring to the three main languages it supports: Julia, Python, and R. Jupyter notebooks are crucial in the fields of data science and education and research because they greatly simplify exploration and experimentation.↩︎"
  }
]