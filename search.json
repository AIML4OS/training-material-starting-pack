[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "",
    "text": "This tutorial aims to be a practical guide for people developing educational resources in R or Python and wishing to disseminate them easily through the SSPCloud.\nThere are a few technical requirements:\nThe aim of this tutorial is to get you started quickly on building educational resources with a state-of-the-art level of reproducibility. The next sections explain how to develop educational resources, and how to disseminate them on the SPPCloud. Keep in mind that this tutorial is intended for people developing resources, not for the users of these resources."
  },
  {
    "objectID": "index.html#step-1-create-a-github-repository-from-a-template",
    "href": "index.html#step-1-create-a-github-repository-from-a-template",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 1: create a Github repository from a template",
    "text": "Step 1: create a Github repository from a template\nThe very first step towards developing educational resources consists in creating a Github repository that will contain them all. We recommend that you use templates developed specifically for the AIML4OS project. Depending on the language you want to use, there is a template for R and a template for Python.\nHere is a simple procedure to re-use a template:\n\nGo to the Github page of the chosen template (R or Python);\nClick on the “Use this template” button and then on “Create a new repository” (see screenshot);\n\n\n\nChoose carefully the owner and the name of the new repository: - Owner: by default the owner is the creator of the fork, but it may be preferable to choose a Github organization (for instance the AIML4OS organization); - Name: give the repository a meaningful name, for instance “Intro_To_Deep_Learning” or “Intro_To_Linear_Regression”."
  },
  {
    "objectID": "index.html#step-2-get-started-with-quarto-on-the-sspcloud",
    "href": "index.html#step-2-get-started-with-quarto-on-the-sspcloud",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 2: get started with Quarto on the SSPCloud",
    "text": "Step 2: get started with Quarto on the SSPCloud\nSSPCloud is not only useful to disseminate educational resources; it is also the right place to develop them. This will facilitate resource dissemination as the environment used for training will be equivalent to the one used for development. In other words, we strongly recommend that you develop on the SSPCloud because this will help a lot to make your educational resources reproducible.\nHere is a simple procedure to start developing resources on the SSP-Cloud. The procedure is different and slightly longer if this is the first time you develop resources on this particular project (because you need to define a configuration).\n\nRPython\n\n\n\nFirst timeNot the first time\n\n\n\nGo the “My Services” Tab and click on “New Service”;\nChoose Rstudio and click Launch;\nCustomize the configuration by changing three settings: - In the “Friendly Name” field, choose a meaningful name (for instance dev_Intro_To_Linear_Regression);\n- In the “Repository” field of the “Git” tab, paste the URL of the repository you created in step 1 (for instance: https://www.github.com/AIML4OS/Intro_To_Linear_Regression); - In the “Network Access” tab, enable access to your service through port 5000.\nClick on Save configuration;\nClick on Launch;\nOpen the Rstudio service;\nRename the Rproj file with a meaningful name (for instance Intro_To_Linear_Regression.Rproj);\nClick on the Rproj file to open the RStudio project;\nYou’re all set!\n\n\n\n\nGo the “My Services” Tab;\nOn the right side of the screen, find the configuration of your project and click on Launch;\nOpen the Rstudio service;\nClick on the Rproj file to open the RStudio project;\nYou’re all set!\n\n\n\n\n\n\n\nFirst timeNot the first time\n\n\n\nGo the “My Services” Tab and click on “New Service”;\nChoose Vscode-r-python-julia and click Launch. We recommend using Vscode because developing Quarto resources is easier with VSCode than with Jupyter. However, final users will be able to open your educational resources with Jupyter;\nCustomize the configuration by changing three settings: - In the “Friendly Name” field, choose a meaningful name (for instance dev_Intro_To_Linear_Regression);\n- In the “Repository” field of the “Git” tab, paste the URL of the repository you created in step 1 (for instance: https://www.github.com/AIML4OS/Intro_To_Linear_Regression); - In the “Network Access” tab, enable access to your service through port 5000.\nClick on Save configuration;\nClick on Launch;\nOpen the Vscode service;\nYou’re all set!\n\n\n\n\nGo the “My Services” Tab;\nOn the right side of the screen, find the configuration of your project and click on Launch;\nYou’re all set!"
  },
  {
    "objectID": "index.html#step-3-develop-resources",
    "href": "index.html#step-3-develop-resources",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 3: develop resources",
    "text": "Step 3: develop resources\n\nDeveloping a website\nYou can develop you website by writing text and code chunks in the existing qmd files (index.qmd and chapter1.qmd). You can also extend the structure of the website by adding new Quarto documents (in the chapters subdirectory). These new documents must then be added to the website by modifying the _quarto.yml file in two places: in the render argument, and in the contents of the sidebar argument.\nIf your resources include a website, it is convenient to have a look at what this website looks like while developing it. You can preview your website from command line by executing:\nquarto preview --port 5000 --host 0.0.0.0\nThen go to https://datalab.sspcloud.fr/my-services, open the README of the service you are using and click on the link to the external port.\n\n\n\n\n\n\n\n\n\n\nFigure 1: \n\n\n\n\n\nDeveloping interactive scripts\nA compléter sur Quarto/R et Notebooks Python.\n\nR\nA compléter sur Quarto/R\n\n\nPython\nA compléter sur Notebooks Python.\nIt makes more sense to provide your trainees with a jupyter notebook. To generate it, you can write\nquarto render --to ipynb\nNotebooks will be written in the _site folder\n\n\n\nWhat you should do at all times\nIt is essential that you commit and push your changes on a regular basis (every 30 minutes or so), because your service (Rstudio or VScode) is not persistent, meaning that any changes that were pushed before closing the service are permanently lost.\nGérer les dépendances: à compléter par Lino"
  },
  {
    "objectID": "index.html#step-4-set-up-a-github-pages-website",
    "href": "index.html#step-4-set-up-a-github-pages-website",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 4: set up a Github pages website",
    "text": "Step 4: set up a Github pages website\nThis step is optional, depending on whether your resources include a website. If your resources consist only in Jupyter notebooks, R scripts or Quarto documents with R chunks, you can skip this step.\n\nCreate the gh-pages branch\nWhen developing resources, you will most likely use the main branch. However, for Github Actions to work, you need an additional branch gh-pages used by Github to deploy websites. This one will be rewritten automatically by Github after every Github Actions pipeline. However, you need to create it first. This should be done only once. Quarto documentation gives this command to create that branch. Be careful with that command, do not use before having done a first push on Github.\ngit checkout --orphan gh-pages\ngit reset --hard # make sure all changes are committed before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\n\n\nDefine a Github Actions workflow\nYou need to define a GHA workflow to automate output construction and deployment. A GHA workflow is just a list of instructions (for instance: install R, install packages…) that are executed automatically every time (for instance every time you push on the master branch). A GHA workflow is done using specific yaml scripts, located in the .github/workflows directory of your repository. The templates already contains standard workflows that you can use as a starting point.\nYou can monitor Github Actions jobs in the “Actions” tab of the Github repository of your project. Do not be afraid if your jobs fail at first; getting Github Actions to work typically requires some debugging."
  },
  {
    "objectID": "index.html#step-5-make-your-resources-available-on-an-online-website",
    "href": "index.html#step-5-make-your-resources-available-on-an-online-website",
    "title": "Creating and disseminating educational resources for SSPCloud users",
    "section": "Step 5: make your resources available on an online website",
    "text": "Step 5: make your resources available on an online website"
  }
]